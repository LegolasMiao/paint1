<!DOCTYPE html>
<html lang="en">
    <head>
        <title>"Map"</title>
        <meta charset="UTF-8">
        <script type="text/javascript"></script>
    </head>
    
    <body>
        <div>
            <div >
            <p >选择打开的文件</p>
            <input type="file" id="filepick">
            <input type="button" value="显示中国地图" onclick="readfile()">
            <input type="button" value="墨卡托投影" onclick="Mecator()">  
            <input type="button" value="兰伯特投影" onclick="Lanmbert()"></br>
            <input type="button" value="显示世界地图" onclick="readfile1()">
            <input type="button" value="墨卡托投影" onclick="Mecator1()"></br>
            <input type="button" value="大圆航线" onclick="circle()">
            <input type="button" value="清空" onclick="clea()"> 

            </div>
            <div class="bg-right">
                <canvas id="paint" width="1080px" height="720px"></canvas>
        
            </div>
        </div>
    
    <script type="text/javascript">
        function Point(x,y)
        {
            this.x=x;
            this.y=y;
        }

        function clea()
        {
            var canvas=document.getElementById('paint');
            var ctx=canvas.getContext('2d');
            ctx.clearRect(0,0,1080,720);
        }

        function readfile()
        {   
            
            var inputfile = document.getElementById("filepick").files[0];
            var reader = new FileReader();
            reader.readAsText(inputfile);
            reader.onload=function(e)
            {   
                var text=reader.result.split("\r\n");
           
                var string=new Array();
                var N=0;
                string[N]=new Array();
        
                var l=text.length;
                var judge=0;
                for(i=1;i<l-1;i++) 
                {   
                    
                    if(text[i]!="END")
                    {   
                        if(text[i].length!=1&&text[i].length!=2&&text[i].length!=3)
                        {
                        var x;
                        var y;
                        x=text[i].split(",")[0];
                        y=text[i].split(",")[1];
                        string[N][judge]=new Point(x,y);
                        judge=judge+1;
                        }
                    }
                    else
                    {
                        judge=0;
                        N=N+1;
                        string[N]=new Array();
                    }
                }
                var canvas = document.getElementById("paint");
                var cxt = canvas.getContext("2d");
                cxt.beginPath();
                cxt.lineWidth = 2;
                for(i=0;i<N+1;i++)
                {
                    for(j=0;j<string[i].length-1;j++)
                    {
                         
                        cxt.moveTo((string[i][j].x-40)*10,(16-string[i][j].y+50)*10);
                        cxt.lineTo((string[i][j+1].x-40)*10,(16-string[i][j+1].y+50)*10);
                        
                    }
                }
                cxt.stroke();
                
            }
        
        }

        function readfile1()
        {   
            
            var inputfile = document.getElementById("filepick").files[0];
            var reader = new FileReader();
            reader.readAsText(inputfile);
            reader.onload=function(e)
            {   
                var text=reader.result.split("\r\n");
           
                var string=new Array();
                var N=0;
                string[N]=new Array();
        
                var l=text.length;
                var judge=0;
                for(i=1;i<l-1;i++) 
                {   
                    
                    if(text[i]!="END")
                    {   
                        if(text[i].length!=1&&text[i].length!=2&&text[i].length!=3&&text[i].length!=4)
                        {
                        var x;
                        var y;
                        x=text[i].split(",")[0];
                        y=text[i].split(",")[1];
                        string[N][judge]=new Point(x,y);
                        judge=judge+1;
                        }
                    }
                    else
                    {
                        judge=0;
                        N=N+1;
                        string[N]=new Array();
                    }
                }
                var canvas = document.getElementById("paint");
                var cxt = canvas.getContext("2d");
                cxt.beginPath();
                cxt.lineWidth = 2;
                for(i=0;i<N+1;i++)
                {
                    for(j=0;j<string[i].length-1;j++)
                    {
                         
                        cxt.moveTo((string[i][j].x-40)*3+650,(16-string[i][j].y+50)*3+100);
                        cxt.lineTo((string[i][j+1].x-40)*3+650,(16-string[i][j+1].y+50)*3+100);
                        
                    }
                }
                cxt.stroke();
                
            }
        
        }

        function Mecator()
        {   
            var a = 6378245;               //长半轴
            var b = 6356863.01877;         //短半轴
            var e0 = 0.006693421622966;    //第一偏心率平方
            var e1 = 0.006738525414684;    //第二偏心率平方
            var L0 = 105 * Math.PI / 180;  //原点经度
            var B0 = 0;                    //原点纬度
            var B1 = 20 * Math.PI / 180;   //第一标准纬线
            var B2 = 40 * Math.PI / 180;   //第二标准纬线

            var inputfile = document.getElementById("filepick").files[0];
            var reader = new FileReader();
            reader.readAsText(inputfile);
            reader.onload=function(e)
            {   
                var text=reader.result.split("\r\n");
           
                var string=new Array();
                var N=0;
                string[N]=new Array();
        
                var l=text.length;
                var judge=0;
                for(i=1;i<l-1;i++) 
                {   
                    
                    if(text[i]!="END")
                    {   
                        if(text[i].length!=1&&text[i].length!=2&&text[i].length!=3)
                        {
                        var x;
                        var y;
                        x=text[i].split(",")[0];
                        y=text[i].split(",")[1];
                        var temp=x;
                        string[N][judge]=new Point(x,y);
                        judge=judge+1;
                        }
                    }
                    else
                    {
                        judge=0;
                        N=N+1;
                        string[N]=new Array();
                    }
                }
                var canvas = document.getElementById("paint");
                var cxt = canvas.getContext("2d");
                cxt.beginPath();
                cxt.lineWidth = 2;
                for(i=0;i<N+1;i++)
                {
                    for(j=0;j<string[i].length-1;j++)
                    {
                        cxt.moveTo(-(16-(((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * ((string[i][j].x * Math.PI / 180) - L0))/10000-500),-((((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * Math.log((Math.tan(Math.PI / 4 + (string[i][j].y * Math.PI / 180) / 2)) * Math.pow(((1 - Math.sqrt(e0) * Math.sin(string[i][j].y * Math.PI / 180)) / (1 + Math.sqrt(e0) * Math.sin(string[i][j].y* Math.PI / 180))), (Math.sqrt(e0) / 2)), Math.E))/10000)+750);
                        cxt.lineTo(-(16-(((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * ((string[i][j+1].x * Math.PI / 180) - L0))/10000-500),-((((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * Math.log((Math.tan(Math.PI / 4 + (string[i][j+1].y * Math.PI / 180) / 2)) * Math.pow(((1 - Math.sqrt(e0) * Math.sin(string[i][j+1].y * Math.PI / 180)) / (1 + Math.sqrt(e0) * Math.sin(string[i][j+1].y* Math.PI / 180))), (Math.sqrt(e0) / 2)), Math.E))/10000)+750);
                    }
                }
                cxt.stroke();
                
            }
        
        }


        function Lanmbert()
        {   
           var L0 = 105 * Math.PI / 180;  //原点经度
           var B0 = 0;                    //原点纬度
           var B1 = 20 * Math.PI / 180;   //第一标准纬线
           var B2 = 40 * Math.PI / 180;   //第二标准纬线
           var x;
            
            var inputfile = document.getElementById("filepick").files[0];
            var reader = new FileReader();
            reader.readAsText(inputfile);
            reader.onload=function(e)
            {   
                var text=reader.result.split("\r\n");
           
                var string=new Array();
                var N=0;
                string[N]=new Array();
        
                var l=text.length;
                var judge=0;
                for(i=1;i<l-1;i++) 
                {   
                    
                    if(text[i]!="END")
                    {   
                        if(text[i].length!=1&&text[i].length!=2&&text[i].length!=3)
                        {
                        var x;
                        var y;
                        x=text[i].split(",")[0];
                        y=text[i].split(",")[1];
                        var temp=x;
                        string[N][judge]=new Point(x,y);
                        judge=judge+1;
                        }
                    }
                    else
                    {
                        judge=0;
                        N=N+1;
                        string[N]=new Array();
                    }
                }
                var canvas = document.getElementById("paint");
                var cxt = canvas.getContext("2d");
                cxt.beginPath();
                cxt.lineWidth = 2;
                for(i=0;i<N+1;i++)
                {
                    for(j=0;j<string[i].length-1;j++)
                    {
                         
                        cxt.moveTo(((((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * Math.log((Math.tan(Math.PI / 4 + (string[i][j].y * Math.PI / 180) / 2)) * Math.pow(((1 - Math.sqrt(e0) * Math.sin(string[i][j].y * Math.PI / 180)) / (1 + Math.sqrt(e0) * Math.sin(string[i][j].y* Math.PI / 180))), (Math.sqrt(e0) / 2)), Math.E))/20000),(16-(((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * ((string[i][j].x * Math.PI / 180) - L0))/20000+500));
                        cxt.lineTo(((((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * Math.log((Math.tan(Math.PI / 4 + (string[i][j+1].y * Math.PI / 180) / 2)) * Math.pow(((1 - Math.sqrt(e0) * Math.sin(string[i][j+1].y * Math.PI / 180)) / (1 + Math.sqrt(e0) * Math.sin(string[i][j+1].y* Math.PI / 180))), (Math.sqrt(e0) / 2)), Math.E))/20000),(16-(((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * ((string[i][j+1].x * Math.PI / 180) - L0))/20000+500));
                        
                    }
                }
                cxt.stroke();
                
            }
        
        }

        function Mecator1()
        {   
            var a = 6378245;               //长半轴
            var b = 6356863.01877;         //短半轴
            var e0 = 0.006693421622966;    //第一偏心率平方
            var e1 = 0.006738525414684;    //第二偏心率平方
            var L0 = 105 * Math.PI / 180;  //原点经度
            var B0 = 0;                    //原点纬度
            var B1 = 20 * Math.PI / 180;   //第一标准纬线
            var B2 = 40 * Math.PI / 180;   //第二标准纬线
    
            var inputfile = document.getElementById("filepick").files[0];
            var reader = new FileReader();
            reader.readAsText(inputfile);
            reader.onload=function(e)
            {   
                var text=reader.result.split("\r\n");
           
                var string=new Array();
                var N=0;
                string[N]=new Array();
        
                var l=text.length;
                var judge=0;
                for(i=1;i<l-1;i++) 
                {   
                    
                    if(text[i]!="END")
                    {   
                        if(text[i].length!=1&&text[i].length!=2&&text[i].length!=3&&text[i].length!=4)
                        {
                        var x;
                        var y;
                        x=text[i].split(",")[0];
                        y=text[i].split(",")[1];
                        var temp=x;
                        string[N][judge]=new Point(x,y);
                        judge=judge+1;
                        }
                    }
                    else
                    {
                        judge=0;
                        N=N+1;
                        string[N]=new Array();
                    }
                }
                var canvas = document.getElementById("paint");
                var cxt = canvas.getContext("2d");
                cxt.beginPath();
                cxt.lineWidth = 2;
                for(i=0;i<N+1;i++)
                {
                    for(j=0;j<string[i].length-1;j++)
                    {
                        cxt.moveTo(-(16-(((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * ((string[i][j].x * Math.PI / 180) - L0))/55000-900),-((((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * Math.log((Math.tan(Math.PI / 4 + (string[i][j].y * Math.PI / 180) / 2)) * Math.pow(((1 - Math.sqrt(e0) * Math.sin(string[i][j].y * Math.PI / 180)) / (1 + Math.sqrt(e0) * Math.sin(string[i][j].y* Math.PI / 180))), (Math.sqrt(e0) / 2)), Math.E))/55000)+340);
                        cxt.lineTo(-(16-(((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * ((string[i][j+1].x * Math.PI / 180) - L0))/55000-900),-((((Math.pow(a, 2) / b) / Math.sqrt(1 + e1)) * Math.log((Math.tan(Math.PI / 4 + (string[i][j+1].y * Math.PI / 180) / 2)) * Math.pow(((1 - Math.sqrt(e0) * Math.sin(string[i][j+1].y * Math.PI / 180)) / (1 + Math.sqrt(e0) * Math.sin(string[i][j+1].y* Math.PI / 180))), (Math.sqrt(e0) / 2)), Math.E))/55000)+340);
                    }
                }
                cxt.stroke();
                
            }
        
        }

        function circle()
        {   
            var a1 = 6378137;               //长半轴
            var b1 = 6356752.3142;         //短半轴
            var e01 = 0.00669437999013;    //第一偏心率平方
            var e11 = 0.006739496742227;    //第二偏心率平方
        
            var LO1 = 2.35222222 ;//经度
            var LA1 = 48.85661389 ;//纬度   
             //北京坐标
            var LO2 = 116.40966670;//经度
            var LA2 = 39.90690556;//纬度

            var tanLA1 = Math.tan(LA1 / 180 * Math.PI);
            var tanLA2 = Math.tan(LA2 / 180 * Math.PI);
            var sinLO1 = Math.sin(LO1 / 180 * Math.PI);
            var sinLO2 = Math.sin(LO2 / 180 * Math.PI);
            var cosLO1 = Math.cos(LO1 / 180 * Math.PI);
            var cosLO2 = Math.cos(LO2 / 180 * Math.PI);

            var number = 1000;

            var LOQ;//新极点经度
            var LAQ;//新极点纬度

            //求新极点
            //经度
            LOQ = Math.atan(-(tanLA2 * cosLO1 - tanLA1 * cosLO2) / (tanLA2 * sinLO1 - tanLA1 * sinLO2)) * 180 / Math.PI;
            //纬度
            LAQ = -Math.atan(Math.cos((LO1 - LOQ) / 180 * Math.PI) / tanLA1) * 180 / Math.PI;

            var difference = LO2 - LO1;//北京与巴黎的经差
            var dx = difference / number;//航迹点间的经差

            var A=0;
            var PointF=new Array();
            PointF[A]=new Array();//存放航迹点

         

            var rr = Math.pow((LOQ - LO2 ), 2) + Math.pow((LAQ - LA2 ), 2);

            for (var i = 0; i < number;i++ )
            {
                //航迹点的经度
                var x=LO2  - i * dx;
                //航迹点的纬度
                var y= Math.sqrt(rr - Math.pow((LOQ - x), 2)) + LAQ;
                PointF[A]=new Point(x,y);
                A=A+1;
            }

            var c = document.getElementById("paint");
            var context = c.getContext("2d");
            context.beginPath();
            context.lineWidth =4; 
            context.strokeStyle="pulple"; 

            for (var j = 0; j < PointF.length-1; j++)
            {
                var XD = ((Math.pow(a1, 2) / b1) / Math.sqrt(1 + e11)) * Math.log((Math.tan(Math.PI / 4 + (PointF[j].y * Math.PI / 180) / 2)) * Math.pow(((1 - Math.sqrt(e01) * Math.sin(PointF[j].y * Math.PI / 180)) / (1 + Math.sqrt(e01) * Math.sin(PointF[j].y * Math.PI / 180))), (Math.sqrt(e01) / 2)), Math.E);
                var YD = ((Math.pow(a1, 2) / b1) / Math.sqrt(1 + e11)) * ((PointF[j].x * Math.PI / 180) - 0);
                var XD_1=((Math.pow(a1, 2) / b1) / Math.sqrt(1 + e11)) * Math.log((Math.tan(Math.PI / 4 + (PointF[j+1].y * Math.PI / 180) / 2)) * Math.pow(((1 - Math.sqrt(e01) * Math.sin(PointF[j+1].y * Math.PI / 180)) / (1 + Math.sqrt(e01) * Math.sin(PointF[j+1].y * Math.PI / 180))), (Math.sqrt(e01) / 2)), Math.E);
                var YD_1=((Math.pow(a1, 2) / b1) / Math.sqrt(1 + e11)) * ((PointF[j+1].x * Math.PI / 180) - 0);

                context.moveTo(YD*0.000015+710,-XD*0.000015+330);
                context.lineTo(YD_1*0.000015+710,-XD_1*0.000015+330);
         }
         context.stroke();
        }
    </script>
 
</body>
</html>
